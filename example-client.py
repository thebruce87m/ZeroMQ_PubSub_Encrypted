import zmq
import zmq.auth
import json
import os


# These directories are generated by the generate_certificates script
base_dir = os.path.dirname(__file__)
keys_dir = os.path.join(base_dir, 'certificates')
public_keys_dir = os.path.join(base_dir, 'public_keys')
secret_keys_dir = os.path.join(base_dir, 'private_keys')

ctx = zmq.Context.instance()

client = ctx.socket(zmq.SUB)
client.setsockopt_string(zmq.SUBSCRIBE, "")


client_secret_file = os.path.join(secret_keys_dir, "client.key_secret")
client_public, client_secret = zmq.auth.load_certificate(client_secret_file)
client.curve_secretkey = client_secret
client.curve_publickey = client_public

server_public_file = os.path.join(public_keys_dir, "server.key")
server_public, _ = zmq.auth.load_certificate(server_public_file)
# The client must know the server's public key to make a CURVE connection.
client.curve_serverkey = server_public
client.connect('tcp://127.0.0.1:1234')


# Socket to talk to server
# context = zmq.Context()
# socket = context.socket(zmq.SUB)
# socket.setsockopt_string(zmq.SUBSCRIBE, "")

# print("Connecting...")
# socket.connect ("tcp://localhost:1234")

while True:
    print("Waiting for Message...")
    msg = client.recv_string()

    json_msg = json.loads(msg)

    print(json_msg)